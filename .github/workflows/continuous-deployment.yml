name: continuous-deployment

on:
  push:
    tags:
      - v*

jobs:

  maven:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout SCM
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Deploy package with Maven
        run: mvn --settings settings.xml -B clean install deploy:deploy || ${{ true }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}

  docker:
    strategy:
      fail-fast: false
    env:
      DOCKER_LOGIN: ${{ github.actor }}
      DOCKER_REGISTRY: docker.pkg.github.com
      DOCKER_REPOSITORY: ${{ DOCKER_REGISTRY }}/${{ github.repository }}
      DOCKER_IMAGE: ${{ DOCKER_REPOSITORY }}/nifi
    runs-on: ubuntu-latest
    steps:

      - id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: Checkout SCM
        uses: actions/checkout@v1

      - name: docker build ${{ steps.get_version.outputs.VERSION }}
        if: success()
        run: docker build -t "$DOCKER_IMAGE":${{ steps.get_version.outputs.VERSION }} .

      - name: docker login
        run: echo "$GITHUB_TOKEN" | docker login -username "$DOCKER_LOGIN" --password-stdin "$DOCKER_REGISTRY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: docker push ${{ steps.get_version.outputs.VERSION }}
        run: |
          docker tag "$DOCKER_IMAGE" "$DOCKER_IMAGE":${{ steps.get_version.outputs.VERSION }}
          docker push "$DOCKER_IMAGE":${{ steps.get_version.outputs.VERSION }}
